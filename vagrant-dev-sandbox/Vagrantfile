# -*- mode: ruby -*-
# vi: set ft=ruby :

############################
# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
############################
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # NOTE FOR YOU
  # If you want to share files between your host OS and Ubuntu server,
  # please adjust the path and remove comment for below setting item
  # Then you can transfer files in your host OS (e.g. Windows) to Ubuntu just
  # by copying them to "C:/guest-os" (feel free to use another location) and then
  # access "/host-data" folder in Ubuntu server to get them
  # config.vm.synced_folder "C:/guest-os", "/host-data"

  # configure settings for guest OS (virtual machine)
  config.vm.box = "ubuntu/trusty64"
  config.vm.hostname = "ubuntu-dev-sandbox"
  config.vm.network "private_network", ip: "192.168.33.10"
  config.vm.box_check_update = false
  config.ssh.forward_agent = true

  config.vm.provider "virtualbox" do |vb|
    vb.gui = false
    vb.name   = "Ubuntu Dev Sandbox"
    vb.memory = 2048
    vb.cpus   = 2
    vb.customize ["modifyvm", :id, "--ostype", "Ubuntu_64"]
    vb.customize ["modifyvm", :id, "--acpi", "on"]
    vb.customize ["modifyvm", :id, "--ioapic", "on"]
    vb.customize ["modifyvm", :id, "--rtcuseutc", "on"]
    vb.customize ["modifyvm", :id, "--cpuhotplug", "off"]
    vb.customize ["modifyvm", :id, "--cpuexecutioncap", "60"]
    vb.customize ["modifyvm", :id, "--pae", "on"]
    vb.customize ["modifyvm", :id, "--hwvirtex", "on"]
    vb.customize ["modifyvm", :id, "--nestedpaging", "on"]
    vb.customize ["modifyvm", :id, "--accelerate3d", "off"]
    vb.customize ["modifyvm", :id, "--boot1", "disk"]
    vb.customize ["modifyvm", :id, "--audio", "none"]
    vb.customize ["modifyvm", :id, "--clipboard", "disabled"]
  end

  # copy files to guest OS, what's pitty that vagrant hasn't supported copy folder yet :(
  config.vm.provision "shell", inline: %q|if [ ! -d "/home/vagrant/provision" ]; then mkdir /home/vagrant/provision; fi|, privileged: false
  config.vm.provision "shell", inline: %q|if [ ! -d "/home/vagrant/provision/cassandra-conf" ]; then mkdir /home/vagrant/provision/cassandra-conf; fi|, privileged: false
  config.vm.provision "file", source: "provision/cassandra-conf/cassandra-node1.yaml", destination: "/home/vagrant/provision/cassandra-conf/cassandra-node1.yaml"
  config.vm.provision "file", source: "provision/cassandra-conf/cassandra-node2.yaml", destination: "/home/vagrant/provision/cassandra-conf/cassandra-node2.yaml"
  config.vm.provision "file", source: "provision/cassandra-conf/cassandra-seed.yaml", destination: "/home/vagrant/provision/cassandra-conf/cassandra-seed.yaml"
  config.vm.provision "file", source: "provision/cassandra-conf/cassandra-env-node1.sh", destination: "/home/vagrant/provision/cassandra-conf/cassandra-env-node1.sh"
  config.vm.provision "file", source: "provision/cassandra-conf/cassandra-env-node2.sh", destination: "/home/vagrant/provision/cassandra-conf/cassandra-env-node2.sh"
  config.vm.provision "file", source: "provision/start-cassandra-node1.sh", destination: "/home/vagrant/provision/start-cassandra-node1.sh"
  config.vm.provision "file", source: "provision/start-cassandra-node2.sh", destination: "/home/vagrant/provision/start-cassandra-node2.sh"
  config.vm.provision "file", source: "provision/start-cassandra-seed.sh", destination: "/home/vagrant/provision/start-cassandra-seed.sh"
  

  # set up things in guest OS so that you don't have to do anything :)
  config.vm.provision "shell", path: "setup.sh"
end